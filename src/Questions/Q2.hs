module Questions.Q2 where

import Data.List

q2:: Integer -> Integer
q2 limit =
    sum evenFib
        where
            -- ind = elemIndex (head [x | x<-fibs , x>limit]) fibs
            evenFib = [x | x<- fibSeries, x<limit, even x]
            fibSeries = take 100 fibs

fibs :: [Integer]
fibs = 1 : 2 : zipWith (+) fibs (tail fibs)

q2Text:: String
q2Text = "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."